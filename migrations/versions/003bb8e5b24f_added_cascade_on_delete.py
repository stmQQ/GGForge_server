"""Added cascade on delete

Revision ID: 003bb8e5b24f
Revises: 23196adc7075
Create Date: 2025-05-09 17:32:05.839205

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '003bb8e5b24f'
down_revision = '23196adc7075'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('group_rows', schema=None) as batch_op:
        batch_op.drop_constraint('group_rows_group_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'groups', ['group_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('group_stages', schema=None) as batch_op:
        batch_op.drop_constraint('group_stages_tournament_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tournaments', ['tournament_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('losers_bracket_qualified')

    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.drop_constraint('groups_groupstage_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'group_stages', ['groupstage_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('maps', schema=None) as batch_op:
        batch_op.drop_constraint('maps_match_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'matches', ['match_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('playoff_match_id', sa.UUID(), nullable=True))
        batch_op.create_unique_constraint(None, ['playoff_match_id'])
        batch_op.drop_constraint('matches_tournament_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tournaments', ['tournament_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'playoff_stage_matches', ['playoff_match_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('playoff_stage_matches', schema=None) as batch_op:
        batch_op.alter_column('playoff_id',
               existing_type=sa.UUID(),
               nullable=False)
        batch_op.drop_constraint('playoff_stage_matches_match_id_key', type_='unique')
        batch_op.drop_constraint('playoff_stage_matches_playoff_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('playoff_stage_matches_match_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'playoff_stages', ['playoff_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('match_id')

    with op.batch_alter_table('playoff_stages', schema=None) as batch_op:
        batch_op.drop_constraint('playoff_stages_tournament_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tournaments', ['tournament_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('prize_table_rows', schema=None) as batch_op:
        batch_op.drop_constraint('prize_table_rows_prize_table_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'prize_tables', ['prize_table_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('prize_tables', schema=None) as batch_op:
        batch_op.drop_constraint('prize_tables_tournament_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tournaments', ['tournament_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('prize_tables', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('prize_tables_tournament_id_fkey', 'tournaments', ['tournament_id'], ['id'])

    with op.batch_alter_table('prize_table_rows', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('prize_table_rows_prize_table_id_fkey', 'prize_tables', ['prize_table_id'], ['id'])

    with op.batch_alter_table('playoff_stages', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('playoff_stages_tournament_id_fkey', 'tournaments', ['tournament_id'], ['id'])

    with op.batch_alter_table('playoff_stage_matches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('match_id', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('playoff_stage_matches_match_id_fkey', 'matches', ['match_id'], ['id'])
        batch_op.create_foreign_key('playoff_stage_matches_playoff_id_fkey', 'playoff_stages', ['playoff_id'], ['id'])
        batch_op.create_unique_constraint('playoff_stage_matches_match_id_key', ['match_id'])
        batch_op.alter_column('playoff_id',
               existing_type=sa.UUID(),
               nullable=True)

    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('matches_tournament_id_fkey', 'tournaments', ['tournament_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('playoff_match_id')

    with op.batch_alter_table('maps', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('maps_match_id_fkey', 'matches', ['match_id'], ['id'])

    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('groups_groupstage_id_fkey', 'group_stages', ['groupstage_id'], ['id'])

    with op.batch_alter_table('group_stages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('losers_bracket_qualified', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('group_stages_tournament_id_fkey', 'tournaments', ['tournament_id'], ['id'])

    with op.batch_alter_table('group_rows', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('group_rows_group_id_fkey', 'groups', ['group_id'], ['id'])

    # ### end Alembic commands ###
